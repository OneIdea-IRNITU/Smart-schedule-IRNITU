from API.functions_api import full_schedule_in_str, full_schedule_in_str_prep, APIError
from API.functions_api import find_week

from tools import keyboards, schedule_processing, statistics
import json

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è(—Å–ª–æ–≤–∞—Ä—å), –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ 3 —Å–æ—Å—Ç–æ—è–Ω–∏—è
# (–Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã; —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥–∏–º; —Å–ø–∏—Å–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –ø–æ —É—Å–ª–æ–≤–∏—é –≤ —Å—Ç–µ–π—Ç–µ)
Condition_request = {}


def start_search(bot, message, storage, tz):
    data = message.chat.id
    message_id = message.message_id
    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = message.chat.id
    # –°–æ–∑–¥–∞—ë–º –∫–ª—é—á –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Condition_request[chat_id] = []
    # –ó–∞—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã
    user = storage.get_user(chat_id=chat_id)
    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ

    if user:

        # –ó–∞–ø—É—Å–∫ —Å—Ç–µ–π—Ç–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º SEARCH
        msg = bot.send_message(chat_id=chat_id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è\n'
                                                     '–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–ë–±-18-1 –∏–ª–∏ –ò–≤–∞–Ω–æ–≤',
                               reply_markup=keyboards.make_keyboard_main_menu())

        bot.register_next_step_handler(msg, search, bot=bot, tz=tz, storage=storage)

    else:

        bot.send_message(chat_id=chat_id, text='–ü—Ä–∏–≤–µ—Ç\n')
        bot.send_message(chat_id=chat_id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüòâ\n')
        bot.send_message(chat_id=chat_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç',
                         reply_markup=keyboards.make_inline_keyboard_choose_institute(storage.get_institutes()))


def search(message, bot, storage, tz, last_msg=None):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    global Condition_request
    data = message
    chat_id = message.chat.id
    message = message.text
    all_found_groups = []
    all_found_prep = []
    page = 0

    if last_msg:
        bot.delete_message(data.chat.id, data.message_id - 1)

    if storage.get_search_list(message) or storage.get_search_list_prep(message):
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
        request_group = storage.get_search_list(message)
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–º
        request_prep = storage.get_search_list_prep(message)
        # –¶–∏–∫–ª—ã –Ω—É–∂–Ω—ã –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–∏—Å–∫–∞. –ó–¥–µ—Å—å –º—ã —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏ –≤ –æ–±–æ–∏—Ö —Ä–µ–∫–≤–µ—Å—Ç–∞—Ö –∏ —Å–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω –æ–±—â–∏–π –∫–ª—é—á,
        # –∫–∞–∫ –¥–ª—è –≥—Ä—É–ø–ø, —Ç–∞–∫ –∏ –¥–ª—è –ø—Ä–µ–ø–æ–¥–æ–≤
        for i in request_group:
            i['found_prep'] = i.pop('name')
        for i in request_prep:
            i['found_prep'] = i.pop('prep_short_name')
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏—â–µ–º
        request_word = message
        # –°–∫–ª–µ–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–≤—É—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–∏—Å–∫–∞
        request = request_group + request_prep
        last_request = request[-1]
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        # –≠—Ç–∏ —Ü–∏–∫–ª—ã –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç –≥—Ä—É–ø–ø—ã –∏ –ø—Ä–µ–ø–æ–¥–æ–≤ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏
        for i in request_group:
            all_found_groups.append(i['found_prep'].lower())
        for i in request_prep:
            all_found_prep.append(i['found_prep'].lower())
        # –°–æ–∑–¥–∞—ë–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
        all_found_results = all_found_groups + all_found_prep
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –±–∞–≥–∞–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        list_search = [page, request_word, all_found_results]
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥ –∫–ª—é—á–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        Condition_request[chat_id] = list_search
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–∫–ª–∏–≤–∏–∞—Ç—É—Ä —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É)
        if len(request) > 10:
            requests = request[:10 * (page + 1)]
            more_than_10 = True
            msg = bot.send_message(chat_id=chat_id, text='–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞',
                                   reply_markup=keyboards.make_keyboard_search_group(last_request=last_request,
                                                                                     page=page,
                                                                                     more_than_10=more_than_10,
                                                                                     requests=requests))
            bot.register_next_step_handler(msg, search, bot=bot, storage=storage, tz=tz, last_msg=msg)

        else:
            msg = bot.send_message(chat_id=chat_id, text='–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞',
                                   reply_markup=keyboards.make_keyboard_search_group(last_request=last_request,
                                                                                     page=page,
                                                                                     more_than_10=False,
                                                                                     requests=request))
            bot.register_next_step_handler(msg, search, bot=bot, storage=storage, tz=tz, last_msg=msg)

    elif ('–ù–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é' == message or '–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é' == message):
        request_word = Condition_request[chat_id][1]
        request_group = storage.get_search_list(request_word)
        request_prep = storage.get_search_list_prep(request_word)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥—Ä—É–ø–ø—ã, —Ç–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã, –∞ –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞
        if request_group:
            group = request_group[0]['name']
            schedule = storage.get_schedule(group=group)
        elif request_prep:
            group = request_prep[0]['prep']
            schedule = request_prep[0]
        if not schedule:
            bot.send_message(chat_id=chat_id, text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ‚è±')
            return

        schedule = schedule['schedule']
        week = find_week()

        # –º–µ–Ω—è–µ–º –Ω–µ–¥–µ–ª—é
        if message == '–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é':
            week = 'odd' if week == 'even' else 'even'

        week_name = '—á–µ—Ç–Ω–∞—è' if week == 'odd' else '–Ω–µ—á–µ—Ç–Ω–∞—è'
        if request_group:
            schedule_str = full_schedule_in_str(schedule, week=week)
        elif request_prep:
            schedule_str = full_schedule_in_str_prep(schedule, week=week)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–æ—Å—å
        if isinstance(schedule_str, APIError):
            schedule_processing.sending_schedule_is_not_available(bot=bot, chat_id=chat_id)
            return


        bot.send_message(chat_id=chat_id, text=f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {group}\n'
                                               f'–ù–µ–¥–µ–ª—è: {week_name}',
                         reply_markup=keyboards.make_keyboard_start_menu())
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        schedule_processing.sending_schedule(bot=bot, chat_id=chat_id, schedule_str=schedule_str)

        bot.clear_step_handler_by_chat_id(chat_id=chat_id)
    else:
        msg = bot.send_message(chat_id=chat_id, text='–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ üòû',
                               reply_markup=keyboards.make_keyboard_main_menu())
        bot.register_next_step_handler(msg, search, bot=bot, storage=storage, tz=tz, last_msg=msg)

    return


def handler_buttons(bot, message, storage, tz):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    global Condition_request
    chat_id = message.message.chat.id
    message_id = message.message.message_id
    data = json.loads(message.data)

    if data['prep_list'] == 'main':
        bot.send_message(chat_id=chat_id, text='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=keyboards.make_keyboard_start_menu())
        bot.delete_message(message_id=message_id, chat_id=chat_id)

        bot.clear_step_handler_by_chat_id(chat_id=chat_id)

        return

    if not Condition_request[chat_id] and len(Condition_request[chat_id]) != 0:
        Condition_request[chat_id][1] = ''

    page = Condition_request[chat_id][0]
    request_word = Condition_request[chat_id][1]

    # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –§–ò–û
    bot.clear_step_handler_by_chat_id(chat_id=chat_id)
    # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
    request_group = storage.get_search_list(request_word)
    # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–º
    request_prep = storage.get_search_list_prep(request_word)
    # –¶–∏–∫–ª—ã –Ω—É–∂–Ω—ã –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–∏—Å–∫–∞. –ó–¥–µ—Å—å –º—ã —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏ –≤ –æ–±–æ–∏—Ö —Ä–µ–∫–≤–µ—Å—Ç–∞—Ö –∏ —Å–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω –æ–±—â–∏–π –∫–ª—é—á,
    # –∫–∞–∫ –¥–ª—è –≥—Ä—É–ø–ø, —Ç–∞–∫ –∏ –¥–ª—è –ø—Ä–µ–ø–æ–¥–æ–≤
    for i in request_group:
        i['found_prep'] = i.pop('name')
    for i in request_prep:
        i['found_prep'] = i.pop('prep_short_name')
    # –°–∫–ª–µ–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–≤—É—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–∏—Å–∫–∞
    request = request_group + request_prep

    last_request = request[-1]

    if data['prep_list'].lower() in Condition_request[chat_id][2]:
        bot.delete_message(message_id=message_id, chat_id=chat_id)
        Condition_request[chat_id][1] = data['prep_list'].lower()
        des = message.data.split(":")[1].replace("}", "").replace('"', '')
        msg = bot.send_message(chat_id=chat_id, text=f'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è {des}',
                               reply_markup=keyboards.make_keyboard_choose_schedule())
        bot.register_next_step_handler(msg, search, bot=bot, storage=storage, tz=tz, last_msg=msg)


    elif data['prep_list'] == 'back':
        more_than_10 = False
        if len(request) > 10:
            requests = request[10 * (page - 1):10 * page]
            more_than_10 = True

        if Condition_request[chat_id][0] - 1 == 0:
            bot.delete_message(message_id=message_id, chat_id=chat_id)
            bot.send_message(chat_id=chat_id, text=f'–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∏—Å–∫–∞:',
                             reply_markup=keyboards.make_keyboard_search_group(last_request=last_request,
                                                                               page=page - 1,
                                                                               requests=requests,
                                                                               more_than_10=more_than_10))

        else:
            bot.edit_message_reply_markup(message_id=message_id, chat_id=chat_id,
                                          reply_markup=keyboards.make_keyboard_search_group(last_request=last_request,
                                                                                            page=page - 1,
                                                                                            requests=requests,
                                                                                            more_than_10=more_than_10))
        Condition_request[chat_id][0] -= 1

    elif data['prep_list'] == 'next':
        bot.delete_message(message_id=message_id, chat_id=chat_id)
        more_than_10 = False
        if len(request) > 10:
            requests = request[10 * (page + 1):10 * (page + 2)]
            more_than_10 = True
        bot.send_message(chat_id=chat_id, text=f'–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
                         reply_markup=keyboards.make_keyboard_search_group(last_request=last_request,
                                                                           page=page + 1,
                                                                           requests=requests,
                                                                           more_than_10=more_than_10))
        Condition_request[chat_id][0] += 1

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ

    else:
        msg = bot.send_message(chat_id=chat_id, text='–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ üòû',
                               reply_markup=keyboards.make_keyboard_main_menu())
        bot.register_next_step_handler(msg, search, bot=bot, storage=storage, tz=tz, last_msg=msg)
