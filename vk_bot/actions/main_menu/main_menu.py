from vkbottle.bot import Message

from tools import keyboards, statistics


async def processing_main_buttons(ans: Message, storage, tz):
    chat_id = ans.from_id
    message = ans.text
    user = storage.get_vk_user(chat_id)

    if '–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é' in message and user.get('group'):
        await ans.answer('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', keyboard=keyboards.make_keyboard_start_menu())
        statistics.add(action='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', storage=storage, tz=tz)

    elif '<==–ù–∞–∑–∞–¥' == message and user.get('group'):
        await ans.answer('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', keyboard=keyboards.make_keyboard_start_menu())

    elif '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥' == message and user.get('group'):
        await ans.answer('–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –í–∞–º –∫–æ–º–∞–Ω–¥, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∏—Ö –≤ —á–∞—Çüòâ:\n'
                     '–°—Ç–∞—Ä—Ç ‚Äì –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º —Å–Ω–∞—á–∞–ª–∞\n'
                     '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äì –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ\n'
                     '–ö–∞—Ä—Ç–∞ ‚Äì –∫–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤ –ò–†–ù–ò–¢–£\n'
                     '–û –ø—Ä–æ–µ–∫—Ç–µ ‚Äì –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n'
                     '–ê–≤—Ç–æ—Ä—ã ‚Äì –º–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏\n'
                     '–ü–æ–¥—Å–∫–∞–∑–∫–∞ ‚Äì –ø–æ–¥—Å–∫–∞–∑–∫–∞ (–∫–∞–∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æüôÉ)\n'
                     '–ü–æ–º–æ—â—å ‚Äì —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n',
                     keyboard=keyboards.make_keyboard_start_menu()
                     )

        statistics.add(action='help', storage=storage, tz=tz)
        return

    elif '–î—Ä—É–≥–æ–µ ‚ö°' == message and user.get('group'):
        await ans.answer('–î—Ä—É–≥–æ–µ', keyboard=keyboards.make_keyboard_extra())
        statistics.add(action='–î—Ä—É–≥–æ–µ', storage=storage, tz=tz)
        return

    elif '–ü–æ–∏—Å–∫ üîé' == message and user.get('group'):
        await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å', keyboard=keyboards.make_keyboard_search())
