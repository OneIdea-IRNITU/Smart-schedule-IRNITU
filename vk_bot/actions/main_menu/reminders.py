from vkbottle.bot import Message

from API.functions_api import calculating_reminder_times, get_notifications_status, APIError
from tools import keyboards, statistics, schedule_processing


async def reminder_settings(ans: Message, storage, tz):
    chat_id = ans.from_id
    message = ans.text
    user = storage.get_vk_user(chat_id)

    time = user['notifications']
    if not time:
        time = 0

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    notifications_status = get_notifications_status(time)
    if isinstance(notifications_status, APIError):
        await schedule_processing.sending_service_is_not_available(ans=ans)
        return

    if message == '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ üì£' and user.get('group'):
        await ans.answer(f'{notifications_status}', keyboard=keyboards.make_inline_keyboard_notifications())
        statistics.add(action='–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ', storage=storage, tz=tz)

    elif message == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô' and user.get('group'):
        await ans.answer('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π ‚öô\n\n'
                         '–£–∫–∞–∂–∏—Ç–µ –∑–∞ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –ø–∞—Ä—ã –¥–æ–ª–∂–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
                         keyboard=keyboards.make_inline_keyboard_set_notifications(time))
        statistics.add(action='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', storage=storage, tz=tz)

    elif '-' == message:
        if time == 0:
            await ans.answer('–•–æ—á–µ—à—å —É–π—Ç–∏ –≤ –º–∏–Ω—É—Å?', keyboard=keyboards.make_inline_keyboard_set_notifications(time))
            return
        time -= 5
        # –û—Ç–Ω–∏–º–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        if time <= 0:
            time = 0
        storage.save_or_update_vk_user(chat_id=chat_id, notifications=time)
        await ans.answer('–ú–∏–Ω—É—Å 5 –º–∏–Ω—É—Ç', keyboard=keyboards.make_inline_keyboard_set_notifications(time))
        return

    elif '+' == message:
        time += 5
        storage.save_or_update_vk_user(chat_id=chat_id, notifications=time)
        await ans.answer('–ü–ª—é—Å 5 –º–∏–Ω—É—Ç', keyboard=keyboards.make_inline_keyboard_set_notifications(time))

    elif message == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑—É
        group = storage.get_vk_user(chat_id=chat_id)['group']

        if storage.get_vk_user(chat_id=chat_id)['course'] == "None":
            schedule = storage.get_schedule_prep(group=group)['schedule']
        else:
            schedule = storage.get_schedule(group=group)['schedule']
        if time > 0:
            reminders = calculating_reminder_times(schedule=schedule, time=int(time))
        else:
            reminders = []
        storage.save_or_update_vk_user(chat_id=chat_id, notifications=time, reminders=reminders)

        await ans.answer(f'{get_notifications_status(time)}', keyboard=keyboards.make_keyboard_start_menu())
