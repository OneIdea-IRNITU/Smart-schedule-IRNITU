from vkbottle.bot import Message

from actions import commands
from tools import keyboards, statistics


def name_institutes(institutes=[]):
    """ –•—Ä–∞–Ω–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ """

    list_institutes = []
    for i in institutes:
        name = i['name']
        list_institutes.append(name)
    return list_institutes


def name_courses(courses=[]):
    """ –•—Ä–∞–Ω–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤ """

    list_courses = []
    for i in courses:
        name = i['name']
        list_courses.append(name)
    return list_courses


def name_groups(groups=[]):
    """ –•—Ä–∞–Ω–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø """

    list_groups = []
    for i in groups:
        name = i['name']
        list_groups.append(name)
    return list_groups


async def start_student_reg(ans: Message, storage, tz):
    chat_id = ans.from_id
    message_inst = ans.text
    message = ans.text
    user = storage.get_vk_user(chat_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –º–µ—Å—Å–µ–¥–∂ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    institutes = name_institutes(storage.get_institutes())
    for institute in institutes:
        if len(message_inst) > 5:
            if message_inst[:-5] in institute:
                message_inst = institute

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if not user:
        institutes = name_institutes(storage.get_institutes())
        # –°–º–æ—Ç—Ä–∏–º –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω—Å—Ç–∏—Ç—É—Ç
        if message_inst in institutes:
            # –ï—Å–ª–∏ –¥–∞, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–¥
            storage.save_or_update_vk_user(chat_id=chat_id, institute=message_inst)
            await ans.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏: {message_inst}\n')
            await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å.',
                             keyboard=keyboards.make_keyboard_choose_course_vk(storage.get_courses(message_inst)))
        else:
            await commands.start(ans=ans, chat_id=chat_id, storage=storage)

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞–º
    elif message == "–ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞–º" and not 'course' in user.keys():
        await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç.', keyboard=keyboards.make_keyboard_institutes(storage.get_institutes()))
        storage.delete_vk_user_or_userdata(chat_id=chat_id)
        return

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º
    elif message == "–ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º" and not 'group' in user.keys():

        await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å.', keyboard=keyboards.make_keyboard_choose_course_vk(
            storage.get_courses(storage.get_vk_user(chat_id=chat_id)['institute'])))
        storage.delete_vk_user_or_userdata(chat_id=chat_id, delete_only_course=True)
        return

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞
    elif not 'course' in user.keys():
        institute = user['institute']
        course = storage.get_courses(institute)
        # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –∫—É—Ä—Å–∞
        if message in name_courses(course):
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å
            storage.save_or_update_vk_user(chat_id=chat_id, course=message)
            groups = storage.get_groups(institute=institute, course=message)
            groups = name_groups(groups)
            await ans.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏: {message}\n')
            await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É.', keyboard=keyboards.make_keyboard_choose_group_vk(groups))
            return
        else:
            await ans.answer('–ù–µ –æ–≥–æ—Ä—á–∞–π –Ω–∞—Å, –º—ã –∂–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ —Å—Ç–∞—Ä–∞–ª–∏—Å—å –Ω–∞–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π üòºüëáüèª',
                             keyboard=keyboards.make_keyboard_choose_course_vk(
                                 storage.get_courses(storage.get_vk_user(chat_id=chat_id)['institute']))
                             )
        return

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
    elif not 'group' in user.keys():
        institute = user['institute']
        course = user['course']
        groups = storage.get_groups(institute=institute, course=course)
        groups = name_groups(groups)
        # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –≥—Ä—É–ø–ø—ã
        if message in groups:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
            storage.save_or_update_vk_user(chat_id=chat_id, group=message)
            await ans.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!üòä \n\n"
                             "–Ø —á–∞—Ç-–±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π –≤ –ò—Ä–∫—É—Ç—Å–∫–æ–º –ü–æ–ª–∏—Ç–µ—Ö–µ.ü§ñ\n\n"
                             "–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è –º–æ–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –∏–ª–∏ –Ω–µ–¥–µ–ª—é, –Ω–æ –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø–æ–∏—Å–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –≥—Ä—É–ø–ø–∞–º, –∞—É–¥–∏—Ç–æ—Ä–∏—è–º –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º (–∫–Ω–æ–ø–∫–∞ [–ü–æ–∏—Å–∫]).\n"
                             "–ê –µ—â–µ –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–∞—Ä–∞—Ö (–≤ —Ä–∞–∑–¥–µ–ª–µ [–î—Ä—É–≥–æ–µ] –∫–Ω–æ–ø–∫–∞ [–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è]).\n\n"
                             "–°–ª–µ–¥—É—é—â–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ–º–æ–≥—É—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞ üíØ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤:\n"
                             "‚è≠–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏, —Ç–∞–∫ —è –±—É–¥—É –í–∞—Å –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å!\n\n"
                             "üåÑ–ü–æ–¥–≥—Ä—É–∂–∞–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ç—Ä–æ–º –∏ –æ–Ω–æ –±—É–¥–µ—Ç –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ –¥–æ —Å–∫–æ–Ω—á–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω!\n\n"
                             "üìÉ–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ [–ü–æ–º–æ—â—å]\n\n"
                             "üÜò–ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å —ç—Ç—É –ø–æ–¥—Å–∫–∞–∑–∫—É —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç [–ü–æ–¥—Å–∫–∞–∑–∫–∞] \n\n"
                             "–ù–∞–¥–µ—é—Å—å, —á—Ç–æ –í–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ –º–µ–Ω—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ [–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è]\n\n"
                             "–ï—Å–ª–∏ –í—ã —Å—Ç–æ–ª–∫–Ω–µ—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π, —Ç–æ –í—ã –º–æ–∂–µ—Ç–µ:\n"
                             "- –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ [https://vk.com/smartschedule]\n"
                             "- –Ω–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ–º—É –∏–∑ –º–æ–∏—Ö —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π (–∫–æ–º–∞–Ω–¥–∞ –ê–≤—Ç–æ—Ä—ã)ü§≠\n",
                             keyboard=keyboards.make_keyboard_start_menu())
        else:
            if message == "–î–∞–ª–µ–µ":
                await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É.', keyboard=keyboards.make_keyboard_choose_group_vk_page_2(groups))
            elif message == "–ù–∞–∑–∞–¥":
                await ans.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É.', keyboard=keyboards.make_keyboard_choose_group_vk(groups))
            else:
                await ans.answer('–Ø –æ—á–µ–Ω—å —Å–æ–º–Ω–µ–≤–∞—é—Å—å, —á—Ç–æ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –Ω–∏–∂–µ üòâ', keyboard=keyboards.make_keyboard_choose_group_vk(groups))
        return


    elif '–î–∞–ª–µ–µ' in message:
        await ans.answer('–î–∞–ª–µ–µ', keyboard=keyboards.make_keyboard_choose_group_vk_page_2())


    else:
        await ans.answer('–¢–∞–∫–æ–º—É –µ—â—ë –Ω–µ –Ω–∞—É—á–∏–ª–∏ üòá:\n'
                         '–î–ª—è –≤—ã–∑–æ–≤–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–¥—É [–ü–æ–¥—Å–∫–∞–∑–∫–∞]\n'
                         '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É [–ü–æ–º–æ—â—å]\n')
        statistics.add(action='bullshit', storage=storage, tz=tz)
